

MEMORY
{
  vmRAM    (rwx) : ORIGIN = 0x02000000, LENGTH = 8192K
  vmROM    (rx ) : ORIGIN = 0x00100000, LENGTH = 10M
}

OUTPUT_ARCH(arm)
ENTRY(_init)
SECTIONS
{

	.init.text :
	{ 
		*(.init)

	} >vmROM


 	.fini_array    :
 	{
 	  PROVIDE (__fini_array_start = .);
 	  KEEP (*(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*)))
 	  KEEP (*(.fini_array EXCLUDE_FILE (*crtbegin.o *crtbegin?.o *crtend.o *crtend?.o ) .dtors))
 	  PROVIDE (__fini_array_end = .);
 	} >vmROM

  	.ctors          :
  	{
		PROVIDE(__ctors_start__ = .);
		
		KEEP (*(SORT(.init_array.*)))
		KEEP (*(.init_array))

/*
  		KEEP (*(SORT(.ctors.*)))
  		KEEP (*(.ctors))
*/
		PROVIDE(__ctors_end__ = .);	
		  
  	} >vmROM
/*
  	.dtors          :
  	{
    	KEEP (*(SORT(.dtors.*)))
    	KEEP (*(.dtors))
  	} >vmROM
*/
	.init.data :
	{
		*(.init.data)
	} >vmROM
	
	. = ALIGN(4);
	.text :	
	{
		*(.text)
	} >vmROM

	. = ALIGN(8);
	.rodata : 
	{
		. = ALIGN(4);
		*(.rodata) 
	} >vmROM

	.ARM.extab :
    {
        *(.ARM.extab* .gnu.linkonce.armextab.*)
    } >vmROM

	.ARM.exidx : {
	    __exidx_start = .;
	    *(.ARM.exidx* .gnu.linkonce.armexidx.*)
	    __exidx_end = .;
	} >vmROM

	__init_data = .;
	.data : 
	{
		. = ALIGN(4);
		__data_start = .;
		*(.data .data.*)
		*(.gnu.linkonce.d.*)
		CONSTRUCTORS
		. = ALIGN(4);
		__data_end = .;
	} >vmRAM AT >vmROM
	. = ALIGN(8);
    .bss : {
		. = ALIGN(8);
        _sbss = .;
        *(.bss .bss.*)
        *(.gnu.linkonce.b.*)
        *(COMMON)
        . = ALIGN(8);
        _ebss = .;
    } > vmRAM
	. = ALIGN(4);
	.heap : {
		. = ALIGN(16);
		__HEAP_START = .;
	} > vmRAM
	

}
